DEF Init
-- Inicialização Carrega constantes e limpa memória
-- Limpa HEX
LDI RY 0
STA RY HEX0
STA RY HEX1
STA RY HEX2
STA RY HEX3
STA RY HEX4
STA RY HEX5
-- Limpa LEDs
STA RY LED0TO7
STA RY LED8
STA RY LED9
-- Limpa KEY0-1
LDA RI 51
STA RI CLR0
STA RI CLR1
-- MEM[50] = 0
LDI RY 0
STA RY 50
-- MEM[51] = 1
LDI RY 1
STA RY 51
-- MEM[52] = 2
LDI RY 2
STA RY 52
-- MEM[53] = 6
LDI RY 6
STA RY 53
-- MEM[54] = 10
LDI RY 10
STA RY 54
-- Limites para cada contador 6 - 11
LDI RY 0
STA RY 6
STA RY 7
STA RY 8
STA RY 9
STA RY 10
STA RY 11
-- Contadores de quantidades (um pra cada HEX) 0 - 5
LDI RY 0
STA RY 0
STA RY 1
STA RY 2
STA RY 3
STA RY 4
STA RY 5
-- Flags
LDI RY 0
-- Flag _stop_
STA RY 12 
RET

DEF INCREMENT
STA RA CLR0
LDA RB 12
CEQ RB 51
JEQ +50 -- Se flag = 1 FIM
LDA RX 0
ADD RX 51
CEQ RX 54
JEQ +3
STA RX 0 -- Guarda unidades e RET
JMP +44
-- Dezenas
LDA RX 50
STA RX 0 -- Guarda zero unidades
LDA RX 1
ADD RX 51
CEQ RX 54
JEQ +3
STA RX 1
JMP +36
-- Centenas
LDA RX 50
STA RX 1 -- Guarda zero dezenas
LDA RX 2
ADD RX 51
CEQ RX 54
JEQ +3
STA RX 2
JMP +28
-- Milhares
LDA RX 50
STA RX 2 -- Guarda zero Centenas
LDA RX 3
ADD RX 51
CEQ RX 54
JEQ +3
STA RX 3
JMP +20
-- Dezenas de Milhares
LDA RX 50
STA RX 3 -- Guarda zero Milhares
LDA RX 4
ADD RX 51
CEQ RX 54
JEQ +3
STA RX 4
JMP +12
-- Centenas de Milhares
LDA RX 50
STA RX 4 -- Guarda zero Dezenas de Milhares
LDA RX 5
ADD RX 51
CEQ RX 54
JEQ +3
STA RX 5
JMP +4
-- Overflow
LDA RB 51
STA RB 12
STA RB LED9
RET

DEF UPDATE_DISPLAY
LDA RY 0
STA RY HEX0
LDA RY 1
STA RY HEX1
LDA RY 2
STA RY HEX2
LDA RY 3
STA RY HEX3
LDA RY 4
STA RY HEX4
LDA RY 5
STA RY HEX5
RET

DEF CONFIG_LIM
-- unidades
LDI RD 1
STA RD LED0TO7
LDA RY SW7TO0
STA RY 6
-- dezenas
LDA RX KEY1
CEQ RX 50
JEQ -2
LDA RI 51
STA RI CLR1
LDA RY SW7TO0
STA RY 7
LDI RD 3
STA RD LED0TO7
-- centenas
LDA RX KEY1
CEQ RX 50
JEQ -2
LDA RI 51
STA RI CLR1
LDA RY SW7TO0
STA RY 8
LDI RD 7
STA RD LED0TO7
-- milhares
LDA RX KEY1
CEQ RX 50
JEQ -2
LDA RI 51
STA RI CLR1
LDA RY SW7TO0
STA RY 9
LDI RD 15
STA RD LED0TO7
-- dezenas de milhares
LDA RX KEY1
CEQ RX 50
JEQ -2
LDA RI 51
STA RI CLR1
LDA RY SW7TO0
STA RY 10
LDI RD 31
STA RD LED0TO7
-- centenas de milhares
LDA RX KEY1
CEQ RX 50
JEQ -2
LDA RI 51
STA RI CLR1
LDA RY SW7TO0
STA RY 11
LDI RD 0
STA RD LED0TO7
RET

DEF CHECK_LIM
-- Compara unidades
LDA RD 6
CEQ RD 0
JEQ +2
JMP +24
-- Compara dezenas
LDA RD 7
CEQ RD 1
JEQ +2
JMP +20
-- Compara centenas
LDA RD 8
CEQ RD 2
JEQ +2
JMP +16
-- Compara milhares
LDA RD 9
CEQ RD 3
JEQ +2
JMP +12
-- Compara dezenas de milhares
LDA RD 10
CEQ RD 4
JEQ +2
JMP +8
-- Compara centenas de milhares
LDA RD 11
CEQ RD 5
JEQ +2
JMP +4
-- Tudo igual
LDI RX 1
STA RX 12
STA RX LED9
RET

DEF RESET_COUNT
LDI RY 0
STA RY 0
STA RY 1
STA RY 2
STA RY 3
STA RY 4
STA RY 5
STA RY 12
STA RY LED8
STA RY LED9
RET

-- Inicializa
JSR Init
-- Loop Principal
-- Le Key0 e vai para rotina de incremento, caso necessario
LDA RA KEY0
CEQ RA 50
JEQ +2
JSR INCREMENT
-- Atualiza displays
JSR UPDATE_DISPLAY
-- Le Key1 e vai para rotina de configuracao caso necessario
LDA RB KEY1
CEQ RB 50
JEQ +4
LDA RI 51
STA RI CLR1
JSR CONFIG_LIM
-- Verifica se a contagem atingiu limite
JSR CHECK_LIM
-- Le FPGA_RESET e reinicia contagem caso necessario
LDA RA RST
CEQ RA 50
JEQ +2
JSR RESET_COUNT
-- Colta para começo
JMP -18